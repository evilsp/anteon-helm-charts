apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{- with .Values.seaweedfs.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    service: seaweedfs
  name: seaweedfs
spec:
  replicas: {{ .Values.seaweedfs.replicas }}
  selector:
    matchLabels:
      service: seaweedfs
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        {{- with .Values.seaweedfs.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        service: seaweedfs
    spec:
      containers:
        - args:
            - server
            - -s3
            - -dir=/data
          image: {{ .Values.images.seaweedfs }}
          name: seaweedfs
          ports:
            - containerPort: 8333
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: seaweedfs-data
      restartPolicy: Always
      volumes:
        - name: seaweedfs-data
          persistentVolumeClaim:
            claimName: seaweedfs-data
status: {}
---
{{- if ne (int .Values.seaweedfs.replicas) 0 -}}
apiVersion: v1
kind: Service
metadata:
  labels:
    service: seaweedfs
  name: seaweedfs
spec:
  ports:
    - name: "8333"
      port: 8333
      targetPort: 8333
  selector:
    service: seaweedfs
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: seaweedfs-data
  name: seaweedfs-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.pvc.seaweedfs.size | quote }}
  storageClassName: {{ .Values.pvc.seaweedfs.storageClassName }}
status: {}
{{- end -}}