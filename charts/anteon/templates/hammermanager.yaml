apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{- with .Values.hammermanager.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    service: hammermanager
  name: hammermanager
spec:
  replicas: {{ .Values.hammermanager.replicas }}
  selector:
    matchLabels:
      service: hammermanager
  strategy: {}
  template:
    metadata:
      annotations:
        {{- with .Values.hammermanager.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        service: hammermanager
    spec:
      initContainers:
        - name: check-dependencies
          image: {{ .Values.images.initContainerBusybox }}
          command: ['sh', '-c', 'until nc -z -w4 {{ .Values.postgres.host }} {{ .Values.postgres.port }}; do echo waiting for dependencies; sleep 1; done;']
      containers:
        - args:
            - /workspace/start_scripts/start_app.sh
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.images.hammermanager }}
          imagePullPolicy: IfNotPresent
          name: hammermanager
          ports:
            - containerPort: 8001
          resources: {}
      restartPolicy: Always
status: {}
---
{{- if ne (int .Values.hammermanager.replicas) 0 -}}
apiVersion: v1
kind: Service
metadata:
  labels:
    service: hammermanager
  name: hammermanager
spec:
  ports:
    - name: "8001"
      port: 8001
      targetPort: 8001
  selector:
    service: hammermanager
status:
  loadBalancer: {}
---
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{- with .Values.hammermanagerCeleryBeat.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    service: hammermanager-celery-beat
  name: hammermanager-celery-beat
spec:
  replicas: {{ .Values.hammermanagerCeleryBeat.celeryBeatReplicas }}
  selector:
    matchLabels:
      service: hammermanager-celery-beat
  strategy: {}
  template:
    metadata:
      annotations:
        {{- with .Values.hammermanagerCeleryBeat.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        service: hammermanager-celery-beat
    spec:
      initContainers:
        - name: check-dependencies
          image: {{ .Values.images.initContainerBusybox }}
          command: ['sh', '-c', 'until nc -z -w4 hammermanager 8001 && nc -z rabbitmq 5672; do echo waiting for dependencies; sleep 1; done;']
      containers:
        - args:
            - /workspace/start_scripts/start_celery_beat.sh
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.images.hammermanager }}
          imagePullPolicy: IfNotPresent
          name: hammermanager-celery-beat
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{- with .Values.hammermanagerCeleryWorker.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    service: hammermanager-celery-worker
  name: hammermanager-celery-worker
spec:
  replicas: {{ .Values.hammermanagerCeleryWorker.celeryWorkerReplicas }}
  selector:
    matchLabels:
      service: hammermanager-celery-worker
  strategy: {}
  template:
    metadata:
      annotations:
        {{- with .Values.hammermanagerCeleryWorker.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        service: hammermanager-celery-worker
    spec:
      initContainers:
        - name: check-dependencies
          image: {{ .Values.images.initContainerBusybox }}
          command: ['sh', '-c', 'until nc -z -w4 hammermanager 8001 && nc -z rabbitmq 5672; do echo waiting for dependencies; sleep 1; done;']
      containers:
        - args:
            - /workspace/start_scripts/start_celery_worker.sh
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.images.hammermanager }}
          imagePullPolicy: IfNotPresent
          name: hammermanager-celery-worker
          resources: {}
      restartPolicy: Always
status: {}
